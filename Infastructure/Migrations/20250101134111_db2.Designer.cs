// <auto-generated />
using Infastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250101134111_db2")]
    partial class db2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Calories100g")
                        .HasColumnType("float");

                    b.Property<double?>("CaloriesPerMeal")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("FoodCodes")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("FoodWeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MealCarbs100g")
                        .HasColumnType("float");

                    b.Property<double?>("MealCarbsPerMeal")
                        .HasColumnType("float");

                    b.Property<double?>("MealFats100g")
                        .HasColumnType("float");

                    b.Property<double?>("MealFatsPerMeal")
                        .HasColumnType("float");

                    b.Property<double?>("MealProtein100g")
                        .HasColumnType("float");

                    b.Property<double?>("MealProteinPerMeal")
                        .HasColumnType("float");

                    b.Property<int?>("MealTotalWeight")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MealEntity");
                });

            modelBuilder.Entity("Domain.Entities.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.Property<string>("MealName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TheRating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.ToTable("RateEntity");
                });

            modelBuilder.Entity("Domain.Entities.Rate", b =>
                {
                    b.HasOne("Domain.Entities.Meal", null)
                        .WithMany("Rates")
                        .HasForeignKey("MealId");
                });

            modelBuilder.Entity("Domain.Entities.Meal", b =>
                {
                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
